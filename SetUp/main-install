#!/usr/bin/python
# Rum Kist Racing NMEA2000 Logger
# Install script
# This is the real installer that does all the work
# Called from install-RKR-Logger

# Required for parsing command line
import sys, getopt
# Required for http connection and download from Github
import requests
# Required for accessing O/S filesystem
import os
# Required for downloading files
import wget
# Required for chmod permissions
import stat
# Required for testing existance of a file on Github
import urllib2


# Initialise installation messaging
verbose = False
def log(msg):
    if verbose:
        print msg
    return

# Parse the arguments passed to the script
# If any of them are not recognised exit with an error
# Since this script downloads and runs the the main-install which might need more parameters
# it might be better if it did not terminate for unknown parameters and just leave that to the main installer.
# We can make that decision later.
try:
    opts, args = getopt.getopt(sys.argv[1:],"vg:",["verbose"])
except getopt.GetoptError as err:
    # Something went wrong, found an unexpected argument
    print (err)
    print 'Unexpected parameter - terminating main-install'
    exit(2)

log('*** Start main-install ***')

gitHubURL = 'https://raw.githubusercontent.com/thetimmorland/rkr-logger/Dev-Bill/'

for opt, arg in opts:
    if opt == '-v':	
        verbose = True
        log('option -v')
    elif opt == '-g':
        gitHubURL = arg
        log('option -g' + arg)

directory = os.getcwd()

log('installing from ' + gitHubURL)
log('installing to ' + directory)

# download all the files listed in the manifest file
log('Retrieving manifest of files to install')
fileName = wget.download(gitHubURL + 'SetUp/manifest.txt')
log('')
log('downloaded ' + fileName)
manifest = open('manifest.txt', 'r')
for source in manifest:
    if source[0] != '#':
        fileToGet = gitHubURL + source.strip('\n')
        req = urllib2.Request(fileToGet)
        try: 
            urllib2.urlopen(req)
        except urllib2.URLError as e:
            log('unable to find file ' + source.strip('\n') + ' listed in manifest')
            log(e)
            exit(3)
        fileName = wget.download(fileToGet, out=directory)
        log('')
        log('downloaded ' + fileName)
manifest.close()

# install apt dependencies
log('Installing apt dependencies')
rc = os.system('apt-get update')
rc = os.system('apt-get install -y can-utils')

# modify /boot/config.txt if required

class CfgLine:
    def __init__(self, line):
        self.line = line
        self.found = False

bootCfg = []
bootCfg.append(CfgLine('dtparam=spi=on\n'))
bootCfg.append(CfgLine('dtoverlay=mcp2515-can0,oscillator=8000000,interrupt=25,spimaxfrequency=1000000\n'))
needUpdate = True

log('Reading /boot/config.txt, checking if updates required.')
cfg = open('/boot/config.txt', 'r')
for source in cfg:
    for target in bootCfg:
        if source == target.line:
            log('Found ' + target.line.strip('\n'))
            target.found = True
            needUpdate = False
cfg.close()

if needUpdate:
    log('Writing to /boot/config.txt')
    cfg = open('/boot/config.txt', 'a')
    cfg.write('\n#RKR Logger\n')
    for target in bootCfg:
        if not(target.found):
            log('Writing ' + target.line.strip('\n'))
            cfg.write(target.line)
else:
    log('No updates needed to /boot/config.txt')
cfg.close()
        
log('Finished modifying /boot/config.txt')

log('*** End main-install ***')

# Clean Exit
exit(0)

